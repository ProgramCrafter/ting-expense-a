[package]
name = "ting-expense-a"
authors = ["Ender Ting <pythonhunter146@gmail.com>"]
version = "0.1.0"
edition = "2021"


# Five build options, with more to come:
# 1. x86_64-unknown-linux-gnu +headless
#     Compiles axum-based server for tracking expenses for Linux target.
# 2. x86_64-pc-windows-gnu +headless
#     Compiles axum-based server for tracking expenses for Windows target.
# 3. wasm32-unknown-unknown
#     Compiles eframe-based WebAssembly application for browsers, with local DB.
# 4. x86_64-unknown-linux-gnu
#     Compiles eframe-based native application for Linux target, with local DB.
# 5. x86_64-pc-windows-gnu
#     Compiles eframe-based native application for Windows target, with local DB.
# android: to come
# ios: to come

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
web-sys = "0.3.70"           # to access the DOM (to hide the loading text)

[dependencies]
axum = { version = "0.7.3", optional = true }
axum-extra = { version = "0.9.3", features = ["cookie", "cookie-signed"], optional = true }
eframe = { version = "0.30.0", features = ["accesskit", "default_fonts", "glow", "persistence", "wayland"], optional = true }
egui = { version = "0.30.0", optional = true }
time = { version = "0.3.37", features = ["formatting", "local-offset"] }

[features]
headless = ["dep:axum", "dep:axum-extra"]
graphics = ["dep:eframe", "dep:egui"]
default  = ["graphics"]

# Remember about
# Enables parallel processing support by enabling the "rayon" feature of jpeg-decoder.
#   BUT IF SOMETHING ELSE enables jpeg-decoder itself
# parallel = ["jpeg-decoder?/rayon"]


[dependencies.uuid]
version = "1.11.0"
features = [
    "v4",                # Lets us generate random UUIDs
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
]

[dependencies.getrandom]
version = "0.2.15"
features = ["js"]

