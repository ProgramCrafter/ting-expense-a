   Compiling ting-expense-a v0.2.0 (/home/tigr/SeriousSoft/Rusty/ting-expense-a)
warning: methods `life_transactions_info` and `life_pie` are never used
   --> src/db_client_view.rs:133:12
    |
49  | impl<U: Upstream> DbView<U> {
    | --------------------------- methods in this implementation
...
133 |     pub fn life_transactions_info(&mut self) -> (u64, usize) {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
147 |     pub fn life_pie(&mut self) -> &[(String, u64)] {
    |            ^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: associated items `new` and `set_indices` are never used
  --> src/crosstyping.rs:74:12
   |
57 | impl CachedStats {
   | ---------------- associated items in this implementation
...
74 |     pub fn new(records: (u64, usize), group_spendings: Vec<(String, u64)>) -> Self {
   |            ^^^
...
81 |     pub fn set_indices(&mut self) {
   |            ^^^^^^^^^^^

warning: struct `MultiuserDb` is never constructed
  --> src/dbs2.rs:12:12
   |
12 | pub struct MultiuserDb {
   |            ^^^^^^^^^^^

warning: associated items `mem_new`, `submit_expense`, `submit_revoke`, `subscribe`, and `load` are never used
   --> src/dbs2.rs:18:12
    |
17  | impl MultiuserDb {
    | ---------------- associated items in this implementation
18  |     pub fn mem_new() -> Self {
    |            ^^^^^^^
...
49  |     pub async fn submit_expense(&self, principal: &str, d: ClientData, temp_alias: Uuid) -> Result<Expense> {
    |                  ^^^^^^^^^^^^^^
...
78  |     pub async fn submit_revoke(&self, principal: &str, total_id: Uuid) -> Result<Expense> {
    |                  ^^^^^^^^^^^^^
...
112 |     pub async fn subscribe(&self, principal: String) -> broadcast::Receiver<UpstreamMessage> {
    |                  ^^^^^^^^^
...
120 |     pub async fn load(&self, principal: &str) -> Result<()> {
    |                  ^^^^

warning: unused `Result` that must be used
  --> src/main.rs:17:5
   |
17 |     graphics::run_app(db);
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
17 |     let _ = graphics::run_app(db);
   |     +++++++

warning: `ting-expense-a` (bin "ting-expense-a") generated 5 warnings
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.87s
